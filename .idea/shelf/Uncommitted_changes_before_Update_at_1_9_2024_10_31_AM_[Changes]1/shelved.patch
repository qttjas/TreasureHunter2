Index: src/Town.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>/**\r\n * The Town Class is where it all happens.\r\n * The Town is designed to manage all the things a Hunter can do in town.\r\n * This code has been adapted from Ivan Turner's original program -- thank you Mr. Turner!\r\n */\r\n\r\npublic class Town {\r\n    // instance variables\r\n    private Hunter hunter;\r\n    private Shop shop;\r\n    private Terrain terrain;\r\n    private String printMessage;\r\n    private boolean toughTown;\r\n\r\n    /**\r\n     * The Town Constructor takes in a shop and the surrounding terrain, but leaves the hunter as null until one arrives.\r\n     *\r\n     * @param shop The town's shoppe.\r\n     * @param toughness The surrounding terrain.\r\n     */\r\n    public Town(Shop shop, double toughness) {\r\n        this.shop = shop;\r\n        this.terrain = getNewTerrain();\r\n\r\n        // the hunter gets set using the hunterArrives method, which\r\n        // gets called from a client class\r\n        hunter = null;\r\n\r\n        printMessage = \"\";\r\n\r\n        // higher toughness = more likely to be a tough town\r\n        toughTown = (Math.random() < toughness);\r\n    }\r\n\r\n    public String getLatestNews() {\r\n        return printMessage;\r\n    }\r\n\r\n    /**\r\n     * Assigns an object to the Hunter in town.\r\n     *\r\n     * @param hunter The arriving Hunter.\r\n     */\r\n    public void hunterArrives(Hunter hunter) {\r\n        this.hunter = hunter;\r\n        printMessage = \"Welcome to town, \" + hunter.getHunterName() + \".\";\r\n\r\n        if (toughTown) {\r\n            printMessage += \"\\nIt's pretty rough around here, so watch yourself.\";\r\n        } else {\r\n            printMessage += \"\\nWe're just a sleepy little town with mild mannered folk.\";\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Handles the action of the Hunter leaving the town.\r\n     *\r\n     * @return true if the Hunter was able to leave town.\r\n     */\r\n    public boolean leaveTown() {\r\n        boolean canLeaveTown = terrain.canCrossTerrain(hunter);\r\n        if (canLeaveTown) {\r\n            String item = terrain.getNeededItem();\r\n            printMessage = \"You used your \" + item + \" to cross the \" + terrain.getTerrainName() + \".\";\r\n            if (checkItemBreak()) {\r\n                hunter.removeItemFromKit(item);\r\n                printMessage += \"\\nUnfortunately, your \" + item + \" broke.\";\r\n            }\r\n\r\n            return true;\r\n        }\r\n\r\n        printMessage = \"You can't leave town, \" + hunter.getHunterName() + \". You don't have a \" + terrain.getNeededItem() + \".\";\r\n        return false;\r\n    }\r\n\r\n    /**\r\n     * Handles calling the enter method on shop whenever the user wants to access the shop.\r\n     *\r\n     * @param choice If the user wants to buy or sell items at the shop.\r\n     */\r\n    public void enterShop(String choice) {\r\n        shop.enter(hunter, choice);\r\n    }\r\n\r\n    /**\r\n     * Gives the hunter a chance to fight for some gold.<p>\r\n     * The chances of finding a fight and winning the gold are based on the toughness of the town.<p>\r\n     * The tougher the town, the easier it is to find a fight, and the harder it is to win one.\r\n     */\r\n    public void lookForTrouble() {\r\n        double noTroubleChance;\r\n        if (toughTown) {\r\n            noTroubleChance = 0.66;\r\n        } else {\r\n            noTroubleChance = 0.33;\r\n        }\r\n\r\n        if (Math.random() > noTroubleChance) {\r\n            printMessage = \"You couldn't find any trouble\";\r\n        } else {\r\n            printMessage = Colors.RED + \"You want trouble, stranger!  You got it!\\nOof! Umph! Ow!\\n\";\r\n            int goldDiff = (int) (Math.random() * 10) + 1;\r\n            if (Math.random() > noTroubleChance) {\r\n                printMessage += \"Okay, stranger! You proved yer mettle. Here, take my gold.\";\r\n                printMessage += \"\\nYou won the brawl and receive \" + Colors.YELLOW + goldDiff + Colors.RESET + \" gold.\";\r\n                hunter.changeGold(goldDiff);\r\n            } else {\r\n                printMessage += \"That'll teach you to go lookin' fer trouble in MY town! Now pay up!\";\r\n                printMessage += \"\\nYou lost the brawl and pay \" + Colors.YELLOW + goldDiff + Colors.RED + \" gold.\" + Colors.RESET;\r\n                hunter.changeGold(-goldDiff);\r\n            }\r\n        }\r\n    }\r\n\r\n    public String toString() {\r\n        return \"This nice little town is surrounded by \" + Colors.CYAN + terrain.getTerrainName() + Colors.RESET + \".\";\r\n    }\r\n\r\n    /**\r\n     * Determines the surrounding terrain for a town, and the item needed in order to cross that terrain.\r\n     *\r\n     * @return A Terrain object.\r\n     */\r\n    private Terrain getNewTerrain() {\r\n        double rnd = Math.random();\r\n        if (rnd < .2) {\r\n            return new Terrain(\"Mountains\", \"Rope\");\r\n        } else if (rnd < .4) {\r\n            return new Terrain(\"Ocean\", \"Boat\");\r\n        } else if (rnd < .6) {\r\n            return new Terrain(\"Plains\", \"Horse\");\r\n        } else if (rnd < .8) {\r\n            return new Terrain(\"Desert\", \"Water\");\r\n        } else {\r\n            return new Terrain(\"Jungle\", \"Machete\");\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Determines whether a used item has broken.\r\n     *\r\n     * @return true if the item broke.\r\n     */\r\n    private boolean checkItemBreak() {\r\n        double rand = Math.random();\r\n        return (rand < 0.5);\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/Town.java b/src/Town.java
--- a/src/Town.java	
+++ b/src/Town.java	
@@ -132,8 +132,10 @@
             return new Terrain("Plains", "Horse");
         } else if (rnd < .8) {
             return new Terrain("Desert", "Water");
-        } else {
+        } else if (rnd < 0.9) {
             return new Terrain("Jungle", "Machete");
+        } else {
+            return new Terrain("Marsh", "Boots");
         }
     }
 
